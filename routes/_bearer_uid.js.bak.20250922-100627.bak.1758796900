/**
 * Global UID middleware for /gw/*
 * If ?user_id is absent => require Bearer "t_<base64url>{\"uid\":\"...\"}"
 * Sets req.query.user_id / req.user_id / x-user-id header. Otherwise 401.
 */
module.exports = function(req, res, next){
  return function (req, res, next) {
    try {
      const auth = req.headers["authorization"] || "";
      if (!auth.startsWith("Bearer ")) { res.status(401).json({status:401,error:"missing_or_invalid_token"}); return; }
      const tok = auth.slice(7).trim();
      if (!tok.startsWith("t_")) { res.status(401).json({status:401,error:"missing_or_invalid_token"}); return; }
      const b64 = tok.slice(2);
      const json = Buffer.from(b64.replace(/-/g,"+").replace(/_/g,"/"),"base64").toString("utf8");
      let uid = null; try { uid = JSON.parse(json).uid; } catch(e) {}
      if (!uid || !/^[0-9]+$/.test(String(uid))) { res.status(401).json({status:401,error:"missing_or_invalid_token"}); return; }
      // Удаляем входящий ?user_id и перезаписываем нашим
      if (req.query && Object.prototype.hasOwnProperty.call(req.query, "user_id")) delete req.query.user_id;
      req.query = Object.assign({}, req.query, { user_id: String(uid) });
      req.user_id = String(uid);
      req.headers["x-user-id"] = String(uid);
      next();
    } catch (e) { res.status(401).json({status:401,error:"missing_or_invalid_token"}); }
  }
  try{
    if (req.query && req.query.user_id) {
      req.user_id = String(req.query.user_id);
      req.headers['x-user-id'] = req.user_id;
      return next();
    }
    const auth = String(req.headers['authorization'] || '');
    const m = auth.match(/^Bearer\s+t_([A-Za-z0-9\-_]+)$/);
    if (!m) return res.status(401).json({status:401,error:'missing_or_invalid_token'});
    const b64 = m[1].replace(/-/g,'+').replace(/_/g,'/');
    const json = JSON.parse(Buffer.from(b64,'base64').toString('utf8'));
    if (!json || !json.uid) return res.status(401).json({status:401,error:'missing_or_invalid_token'});
    const uid = String(json.uid);
    if (!req.query) req.query = {};
    req.query.user_id = uid;
    req.user_id = uid;
    req.headers['x-user-id'] = uid;
    return next();
  }catch(_e){
    return res.status(401).json({status:401,error:'missing_or_invalid_token'});
  }
};
