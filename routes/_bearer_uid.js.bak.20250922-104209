/**
 * Authorization: Bearer t_<base64url>{"uid":"<user_id>"}  → req.query.user_id, req.user_id, x-user-id
 * Любой входящий ?user_id игнорируется. Никаких побочных веток.
 */
module.exports = function () {
  return function (req, res, next) {
    const bad = () => res.status(401).json({status:401,error:'missing_or_invalid_token'});
    try {
      const auth = String(req.headers['authorization'] || '');
      if (!auth.startsWith('Bearer ')) return bad();
      const tok = auth.slice(7).trim();
      if (!tok.startsWith('t_')) return bad();
      const b64 = tok.slice(2).replace(/-/g,'+').replace(/_/g,'/');
      let uid; try { uid = JSON.parse(Buffer.from(b64,'base64').toString('utf8')).uid; } catch(_) {}
      if (!uid || !/^[0-9]+$/.test(String(uid))) return bad();

      if (req.query && Object.prototype.hasOwnProperty.call(req.query,'user_id')) delete req.query.user_id;
      req.query = Object.assign({}, req.query, { user_id: String(uid) });
      req.user_id = String(uid);
      req.headers['x-user-id'] = String(uid);
      console.log("[bearerUid]", {path:req.path, q:req.query, auth:String(req.headers["authorization"]||"").slice(0,16)}); next();
    } catch { return bad(); }
  };
};
