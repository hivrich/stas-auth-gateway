#!/usr/bin/env bash
# –°–æ–∑–¥–∞–Ω–∏–µ OAuth flow –¥–ª—è GPT Actions

echo "üîê –ù–ê–°–¢–†–ê–ò–í–ê–ï–ú OAUTH –î–õ–Ø GPT ACTIONS"

# 1. –°–æ–∑–¥–∞—Ç—å OAuth endpoints –≤ gateway
cat >> /opt/stas-auth-gateway/server.js << 'EOF'

// GPT Actions OAuth Flow
app.get('/oauth/authorize', (req, res) => {
  const { client_id, redirect_uri, state, scope } = req.query;
  
  // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å –≤–≤–æ–¥–æ–º user_id
  res.send(`
    <!DOCTYPE html>
    <html>
    <head>
      <title>Intervals Training API - Authorization</title>
      <style>
        body { font-family: Arial, sans-serif; max-width: 600px; margin: 50px auto; padding: 20px; }
        .form-group { margin: 20px 0; }
        label { display: block; margin-bottom: 5px; font-weight: bold; }
        input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px; }
        button { background: #007bff; color: white; padding: 12px 24px; border: none; border-radius: 4px; cursor: pointer; }
        button:hover { background: #0056b3; }
        .info { background: #f8f9fa; padding: 15px; border-radius: 4px; margin: 20px 0; }
      </style>
    </head>
    <body>
      <h1>üîó Intervals Training API</h1>
      <p>–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞—à–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–º –¥–∞–Ω–Ω—ã–º –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à User ID:</p>
      
      <div class="info">
        <strong>–ß—Ç–æ —Ç–∞–∫–æ–µ User ID?</strong><br>
        –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤ —Å–∏—Å—Ç–µ–º–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.<br>
        –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ —Å–≤–æ–π User ID, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
      </div>
      
      <form method="POST" action="/oauth/token">
        <input type="hidden" name="client_id" value="${client_id}">
        <input type="hidden" name="redirect_uri" value="${redirect_uri}">
        <input type="hidden" name="state" value="${state}">
        
        <div class="form-group">
          <label for="user_id">User ID:</label>
          <input type="text" id="user_id" name="user_id" required placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à User ID">
        </div>
        
        <button type="submit">–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø</button>
      </form>
      
      <p style="margin-top: 30px; color: #666; font-size: 14px;">
        –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∏—Ç –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–º –¥–∞–Ω–Ω—ã–º –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.
      </p>
    </body>
    </html>
  `);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
app.post('/oauth/token', async (req, res) => {
  const { user_id, client_id, redirect_uri, state } = req.body;
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const userResult = await pool.query('SELECT id FROM public.user WHERE id = $1', [user_id]);
    if (userResult.rows.length === 0) {
      return res.status(400).send(`
        <h1>–û—à–∏–±–∫–∞</h1>
        <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.</p>
        <a href="/oauth/authorize?client_id=${client_id}&redirect_uri=${encodeURIComponent(redirect_uri)}&state=${state}">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</a>
      `);
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º access token
    const accessToken = jwt.sign(
      { user_id: user_id, client_id: client_id },
      process.env.JWT_SECRET || 'gpt-actions-secret',
      { expiresIn: '24h' }
    );
    
    // –†–µ–¥–∏—Ä–µ–∫—Ç–∏–º –æ–±—Ä–∞—Ç–Ω–æ –≤ GPT —Å authorization code
    const authCode = jwt.sign(
      { user_id: user_id, client_id: client_id, access_token: accessToken },
      process.env.JWT_SECRET || 'gpt-actions-secret',
      { expiresIn: '10m' }
    );
    
    const redirectUrl = `${redirect_uri}?code=${authCode}&state=${state}`;
    res.redirect(redirectUrl);
    
  } catch (error) {
    console.error('OAuth token error:', error);
    res.status(500).send('<h1>–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</h1>');
  }
});

// GPT Actions callback endpoint
app.get('/oauth/callback', (req, res) => {
  const { code, state } = req.query;
  
  // –î–ª—è GPT Actions –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
  res.json({
    success: true,
    code: code,
    state: state,
    message: 'Authorization successful'
  });
});
EOF

echo "‚úÖ OAuth endpoints –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ gateway"

# 2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å gateway
systemctl restart stas-auth-gateway
echo "‚úÖ Gateway –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"

# 3. –°–æ–∑–¥–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è GPT
cat > gpt-actions-setup.md << 'EOF'
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GPT Actions –¥–ª—è Intervals Training API

## 1. –°–æ–∑–¥–∞–Ω–∏–µ GPT —Å Actions

1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ [ChatGPT](https://chat.openai.com/)
2. –ù–∞–∂–º–∏—Ç–µ "Explore GPTs" ‚Üí "Create a GPT"
3. –í —Ä–∞–∑–¥–µ–ª–µ "Actions" –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª `action.json`

## 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OAuth

–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Actions —É–∫–∞–∂–∏—Ç–µ:

### Authentication Type: OAuth
### OAuth Configuration:

**Client ID:** `gpt-actions-client`
**Client Secret:** `gpt-actions-secret` (–∏–ª–∏ –ª—é–±–æ–π)

**Authorization URL:** 
```
https://intervals.stas.run/gw/oauth/authorize
```

**Token URL:**
```
https://intervals.stas.run/gw/oauth/token
```

**Scope:** `read write`

**Callback URLs:**
```
https://chat.openai.com/aip/g-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/oauth/callback
```

## 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GPT —Å–º–æ–∂–µ—Ç:
- ‚úÖ –ß–∏—Ç–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- ‚úÖ –ü–æ–ª—É—á–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫  
- ‚úÖ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–ª–∞–Ω—ã –∏–∑ Intervals
- ‚úÖ –°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –ø–ª–∞–Ω—ã –≤ Intervals

## 4. –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

```
"–ü–æ–∫–∞–∂–∏ –º–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å"
"–ö–∞–∫–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —É –º–µ–Ω—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é?"
"–°–æ–∑–¥–∞–π –ø–ª–∞–Ω –±–µ–≥–∞ –Ω–∞ 10 –∫–º"
```

EOF

echo "‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã: gpt-actions-setup.md"
echo ""
echo "üéâ GPT Actions –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –°–æ–∑–¥–∞–π—Ç–µ GPT –≤ ChatGPT"
echo "2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ action.json"  
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ OAuth –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ –≤ gpt-actions-setup.md"
echo "4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é"
