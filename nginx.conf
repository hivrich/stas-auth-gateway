server {
    listen 80;
    server_name intervals.stas.run;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name intervals.stas.run;

    ssl_certificate /etc/letsencrypt/live/intervals.stas.run/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/intervals.stas.run/privkey.pem;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Handle OAuth endpoints (/gw/*)
    location ^~ /gw/ {
        proxy_pass http://127.0.0.1:3337;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Handle API endpoints (all others)
    location / {
        proxy_pass http://127.0.0.1:3337;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
